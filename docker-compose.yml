services:
  aurora:
    image: mysql:9.1.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: kerekesfacapa
    ports:
      - 3306:3306
  db-migrator:
    depends_on:
      aurora:
        condition: service_started
      localstack-setup:
        condition: service_completed_successfully
    build:
      context: ./SRC/Tools
      dockerfile: ./dockerfile-dbmigrator
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=local
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - PREFIX=local
  localstack:
    image: localstack/localstack:4.0.3
    restart: always
    ports:
      - 4566:4566
    environment:
      - SERVICES=secretsmanager
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  localstack-setup:
    depends_on:
      - localstack
    build:
      context: ./SRC/Tools
      dockerfile: ./dockerfile-localstacksetup
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=local
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - 'DB_SECRET={"Endpoint": "aurora", "Database": "WarehouseDb", "Password": "kerekesfacapa", "UserName": "root"}'
      - JWT_SECRET=very-very-very-very-very-very-very-secret-key
  api:
    depends_on:
      localstack-setup:
        condition: service_completed_successfully
      db-migrator:
        condition: service_completed_successfully
    restart: always
    build:
      context: ./SRC/App
      dockerfile: ./dockerfile
      args:
        - CONFIG=Debug
    ports:
      - 1986:1986
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=local
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local